name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest -n 5 --cov .

    - name: Build packages
      run: |
        uv build --all-packages

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          dist/
          packages/*/dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    environment: testpypi

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: .

    - name: Publish to TestPyPI
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: |
        uv publish --index testpypi dist/*

  publish-pypi:
    needs: [build, publish-testpypi]
    runs-on: ubuntu-latest
    environment: pypi
    if: github.ref_type == 'tag'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: .

    - name: Publish to PyPI
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        uv publish dist/*

  github-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/**/*
        generate_release_notes: true
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
